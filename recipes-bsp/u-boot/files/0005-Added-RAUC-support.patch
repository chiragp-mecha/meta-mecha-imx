From deae206b7e7b5f09e11c49e3f75b9192d08e6572 Mon Sep 17 00:00:00 2001
From: Hardevsinh Palaniya <hardevsinh.palaniya@siliconsignals.io>
Date: Wed, 21 Jun 2023 19:42:33 +0530
Subject: [PATCH] Added RAUC support

Signed-off-by: Hardevsinh Palaniya <hardevsinh.palaniya@siliconsignals.io>

diff --git a/include/configs/imx8mm_evk.h b/include/configs/imx8mm_evk.h
index 3d992ffa13..8e3b6887c7 100644
--- a/include/configs/imx8mm_evk.h
+++ b/include/configs/imx8mm_evk.h
@@ -100,6 +100,42 @@
 	"emmc_dev=2\0"\
 	"sd_dev=1\0" \
 
+/* MECHA RAUC */
+#define RAUC_ENV_SETTINGS \
+       "rauc_update_in_progress=true\0" \
+       "BOOT_A_LEFT=3\0" \
+       "BOOT_B_LEFT=0\0" \
+       "BOOT_ORDER=A\0" \
+       "rauc_boot=echo Determining active boot slot; " \
+       "test -n \"${BOOT_ORDER}\" || setenv BOOT_ORDER \"A B\"; " \
+       "test -n \"${BOOT_A_LEFT}\" || setenv BOOT_A_LEFT 3; " \
+       "test -n \"${BOOT_B_LEFT}\" || setenv BOOT_B_LEFT 3; " \
+       "setenv slot_rauc; " \
+       "for BOOT_SLOT in \"${BOOT_ORDER}\"; do " \
+             "if test \"x${BOOT_SLOT}\" = \"xA\"; then " \
+             "if test ${BOOT_A_LEFT} -gt 0; then " \
+             "setexpr BOOT_A_LEFT ${BOOT_A_LEFT} - 1; " \
+             "echo \"Found valid slot A, ${BOOT_A_LEFT} attempts remaining\"; " \
+             "setenv mmcpart 2; " \
+             "setenv slot_rauc \"A\"; " \
+             "run mmcboot; " \
+           "fi; " \
+         "elif test \"x${BOOT_SLOT}\" = \"xB\"; then " \
+             "if test ${BOOT_B_LEFT} -gt 0; then " \
+             "setexpr BOOT_B_LEFT ${BOOT_B_LEFT} - 1; " \
+             "echo \"Found valid slot B, ${BOOT_B_LEFT} attempts remaining\"; " \
+             "setenv mmcpart 3; " \
+             "setenv slot_rauc \"B\"; " \
+             "run mmcboot; " \
+           "fi; " \
+         "fi; " \
+       "done; " \
+       "if test -z \"${slot_rauc}\"; then " \
+             "echo \"No valid slot found.\"; " \
+         "echo \"In order to prevent damage to the emmc, halt the system.\"; " \
+       "fi;\0"
+
+
 /* Initial environment variables */
 #if defined(CONFIG_NAND_BOOT)
 #define CONFIG_EXTRA_ENV_SETTINGS \
@@ -123,6 +159,7 @@
 	CONFIG_MFG_ENV_SETTINGS \
 	BOOTENV \
 	JAILHOUSE_ENV \
+	RAUC_ENV_SETTINGS \
 	"prepare_mcore=setenv mcore_clk clk-imx8mm.mcore_booted;\0" \
 	"scriptaddr=0x43500000\0" \
 	"kernel_addr_r=" __stringify(CONFIG_SYS_LOAD_ADDR) "\0" \
@@ -140,24 +177,28 @@
 	"mmcpart=1\0" \
 	"mmcroot=" CONFIG_MMCROOT " rootwait rw\0" \
 	"mmcautodetect=yes\0" \
-	"mmcargs=setenv bootargs ${jh_clk} ${mcore_clk} console=${console} root=${mmcroot}\0 " \
-	"loadbootscript=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${bsp_script};\0" \
+	"mmcargs=setenv bootargs console=${console},${baudrate} earlycon " \
+			"root=/dev/mmcblk${mmcdev}p${mmcpart} rootwait rw rootfs=ext4 \0" \
+	"loadbootscript=ext4load mmc ${mmcdev}:${mmcrootcpart} ${loadaddr} /boot/${script}\0" \
 	"bootscript=echo Running bootscript from mmc ...; " \
-		"source\0" \
-	"loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}\0" \
-	"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr_r} ${fdtfile}\0" \
+		"source ${loadaddr}\0" \
+	"loadimage=ext4load mmc ${mmcdev}:${mmcpart} ${loadaddr} /boot/${image}\0" \
+	"loadfdt=ext4load mmc ${mmcdev}:${mmcpart} ${fdt_addr} /boot/${fdtfile}\0" \
+	"loadcntr=ext4load mmc ${mmcdev}:${mmcpart} ${cntr_addr} /boot/${cntr_file}\0" \
 	"mmcboot=echo Booting from mmc ...; " \
 		"run mmcargs; " \
+		"saveenv; " \
 		"if test ${boot_fit} = yes || test ${boot_fit} = try; then " \
 			"bootm ${loadaddr}; " \
 		"else " \
 			"if run loadfdt; then " \
+				"run loadimage; " \
 				"booti ${loadaddr} - ${fdt_addr_r}; " \
 			"else " \
 				"echo WARN: Cannot load the DT; " \
 			"fi; " \
 		"fi;\0" \
-	"netargs=setenv bootargs ${jh_clk} ${mcore_clk} console=${console} " \
+	"netargs=setenv bootargs console=${console},${baudrate} earlycon " \
 		"root=/dev/nfs " \
 		"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
 	"netboot=echo Booting from net ...; " \
@@ -178,16 +219,20 @@
 			"fi; " \
 		"fi;\0" \
 	"bsp_bootcmd=echo Running BSP bootcmd ...; " \
-		"mmc dev ${mmcdev}; if mmc rescan; then " \
-		   "if run loadbootscript; then " \
-			   "run bootscript; " \
-		   "else " \
-			   "if run loadimage; then " \
-				   "run mmcboot; " \
-			   "else run netboot; " \
-			   "fi; " \
-		   "fi; " \
-	   "fi;"
+		"if test \"x${rauc_update_in_progress}\" = \"xtrue\"; then " \
+									"run rauc_boot; " \
+		"else " \
+			"mmc dev ${mmcdev}; if mmc rescan; then " \
+				"if run loadbootscript; then " \
+						"run bootscript; " \
+				"else " \
+					"if run loadimage; then " \
+							"run mmcboot; " \
+					"else run netboot; " \
+					"fi; " \
+				"fi; " \
+			"fi;" \
+		"fi;"
 #endif
 
 /* Link Definitions */
@@ -199,6 +244,7 @@
 #define CONFIG_SYS_INIT_SP_ADDR \
 	(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)
 
+#define CONFIG_SYS_MMC_ENV_PART         0   /* user area */
 #define CONFIG_SYS_MMC_ENV_DEV		1   /* USDHC2 */
 #define CONFIG_MMCROOT			"/dev/mmcblk1p2"  /* USDHC2 */
 
-- 
2.25.1

